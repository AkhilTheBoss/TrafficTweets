
# #user  nobody;
# worker_processes  1;

# #error_log  logs/error.log;
# #error_log  logs/error.log  notice;
# #error_log  logs/error.log  info;

# #pid        logs/nginx.pid;


# events {
#     worker_connections  1024;
# }


# http {
#     include       mime.types;
#     default_type  application/octet-stream;

#     #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#     #                  '$status $body_bytes_sent "$http_referer" '
#     #                  '"$http_user_agent" "$http_x_forwarded_for"';

#     #access_log  logs/access.log  main;

#     sendfile        on;
#     #tcp_nopush     on;

#     #keepalive_timeout  0;
#     keepalive_timeout  65;

#     #gzip  on;

#     server {
#         listen       8080;
#         server_name  localhost;

#         #charset koi8-r;

#         #access_log  logs/host.access.log  main;

#         location / {
#             root   html;
#             index  index.html index.htm;
#         }

#         #error_page  404              /404.html;

#         # redirect server error pages to the static page /50x.html
#         #
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   html;
#         }

#         # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#         #
#         #location ~ \.php$ {
#         #    proxy_pass   http://127.0.0.1;
#         #}

#         # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#         #
#         #location ~ \.php$ {
#         #    root           html;
#         #    fastcgi_pass   127.0.0.1:9000;
#         #    fastcgi_index  index.php;
#         #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#         #    include        fastcgi_params;
#         #}

#         # deny access to .htaccess files, if Apache's document root
#         # concurs with nginx's one
#         #
#         #location ~ /\.ht {
#         #    deny  all;
#         #}
#     }


#     # another virtual host using mix of IP-, name-, and port-based configuration
#     #
#     #server {
#     #    listen       8000;
#     #    listen       somename:8080;
#     #    server_name  somename  alias  another.alias;

#     #    location / {
#     #        root   html;
#     #        index  index.html index.htm;
#     #    }
#     #}


#     # HTTPS server
#     #
#     #server {
#     #    listen       443 ssl;
#     #    server_name  localhost;

#     #    ssl_certificate      cert.pem;
#     #    ssl_certificate_key  cert.key;

#     #    ssl_session_cache    shared:SSL:1m;
#     #    ssl_session_timeout  5m;

#     #    ssl_ciphers  HIGH:!aNULL:!MD5;
#     #    ssl_prefer_server_ciphers  on;

#     #    location / {
#     #        root   html;
#     #        index  index.html index.htm;
#     #    }
#     #}
#     include servers/*;
# }


# events {}
# http {
#     include mime.types;

#     server {
#         listen 8080;
#         root /Users/ashriram/Documents/node/properApp;

#         # the number url is redirectesd to count url, but the url being number not count
#         rewrite ^/number/(\w+) /count/$1;

#         location ~* /count/[0-9] {
#             root /Users/ashriram/Documents/node/properApp;
#             try_files /index.html =404;
#         }

#         location /fruits {
#             root /Users/ashriram/Documents/node/properApp;
#         }

#         location /service1 {
#             proxy_pass http://localhost:7777/;
#         }

#          location /service2 {
#             proxy_pass http://localhost:7778/;
#         }



#         location /carbs {
#             alias /Users/ashriram/Documents/node/properApp/fruits;
#         }

#         location /vegetables {
#             alias /Users/ashriram/Documents/node/properApp;
#             # The above code works only for index.html
#             try_files /vegetables/vegetables.html /index.html =404;

#         }

#         location /crops {
#             # crops url is redirected to fruits
#             # 307 is a http status code for redirecting
#             return 307 /fruits;
#         }
#     }
# }


# worker_processes 1;

# events {
#     worker_connections 1024;
# }

# http {
#     server {
#         listen 80;

#         location /service1 {
#             proxy_pass http://localhost:7777;
#         }

#         location /service2 {
#             proxy_pass http://localhost:3002;
#         }

#         location / {
#             root /Users/ashriram/Documents/node/properApp;
#             try_files $uri /index.html;
#         }
#     }
# }


# events {}
# http {

    server {
        listen 8080;
        server_name  localhost;
        
        location / {
                return 200 "<h1>hi boss<h1>";
        }

        location /formsService {
            proxy_pass http://localhost:3002/forms;
        }

        location /socket.io/ {
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_pass "http://localhost:3001/socket.io/";
        }

         location /userProfile {
            proxy_pass "http://localhost:3003/";
        }
        location /userProfile/page {
            proxy_pass "http://localhost:3003/Page";
        }
        location /userProfile/location {
            proxy_pass "http://localhost:3003/locationCheck";
        }
        location /userProfile/roomIDCheck {
            proxy_pass "http://localhost:3003/roomIDCheck";
        }
        location /notifications/receive {
            proxy_pass "http://localhost:3004/data";
        }
        location /logs/signup {
            proxy_pass "http://localhost:3005/signUpLog";
        }
        location /logs/signin {
            proxy_pass "http://localhost:3005/signInLog";
        }
        location /logs/logout {
            proxy_pass "http://localhost:3005/logOutLog";
        }
        location /logs/newRoom {
            proxy_pass "http://localhost:3005/createdRoomLog";
        }
        location /logs/currLoc {
            proxy_pass "http://localhost:3005/locationLog";
        }
        location /logs/joinRoom {
            proxy_pass "http://localhost:3005/joinedRoomLog";
        }
        location /logs/all {
            proxy_pass "http://localhost:3005/allDataLogs";
        }
        location /msg/insert {
            proxy_pass "http://localhost:3001/insertTrafficData";
        }
        location /server/default {
            proxy_pass "http://host.docker.internal:3001/";
        }
        location /server/def {
            return 200 "<hww<h1>";
        }
        # location /msg/display {
        #     proxy_pass http://localhost:3001/getData;
        # }
    }
# }